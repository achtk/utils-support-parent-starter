
package com.chua.common.support.database.jdbc.id;

import com.chua.common.support.database.jdbc.Dialect;
import com.chua.common.support.database.jdbc.Type;

import java.sql.Connection;


/**
 * Interface for all ID generators
 *
 * @author Yong Zhu
 * @version 1.0.0
 * @since 1.0
 */

public interface IdGenerator {
    /**
     * Get the next ID generated by implementation of IdGenerator
     *
     * @param con      Connection which used get next ID, note this connection will not be closed in method call
     * @param dialect  The Dialect
     * @param dataType The {@link Type} of a column
     * @return id generated by IdGenerator
     */
    public Object getNextID(Connection con, Dialect dialect, Type dataType);

    /**
     * Return GenerationType
     */
    public GenerationType getGenerationType();

    /**
     * Return a unique Id Generator name in this TableModel
     */
    public String getIdGenName();

    /**
     * Return a newCopy (Deep Clone) instance
     */
    public IdGenerator newCopy();

    /**
     * If depends on AutoIdGenerator, for example SortedUUIDGenerator depends on
     * AutoIdGenerator to create start numbers
     */
    public Boolean dependOnAutoIdGenerator();

}
