//package com.chua.example.geo
//
//import com.alibaba.excel.EasyExcel
//import com.alibaba.excel.context.AnalysisContext
//import com.alibaba.excel.event.AnalysisEventListener
//import com.alibaba.excel.exception.ExcelDataConvertException
//import com.alibaba.excel.metadata.CellExtra
//import com.alibaba.excel.support.ExcelTypeEnum
//import com.chua.common.support.file.export.ExportFileBuilder
//import com.chua.common.support.geo.Point
//import com.chua.common.support.json.Json
//import com.chua.common.support.json.JsonArray
//import com.chua.common.support.json.JsonObject
//import com.chua.common.support.value.Pair
//import com.google.common.collect.Lists
//import lombok.SneakyThrows
//
//import java.nio.file.Files
//import java.nio.file.Paths
//
//import static com.alibaba.excel.enums.CellExtraTypeEnum.*
//import static com.chua.common.support.geo.transform.Coordinate.GCJ02
//import static com.chua.common.support.geo.transform.Coordinate.WGS84
///**
// *
// * @author CH
// */
//class GeoEx {
//
//    static void main1(String[] args) {
//        EasyExcel.read("Z://网格.xlsx")
//                .registerReadListener(new OriginProtocolResolver())
//                .excelType(ExcelTypeEnum.XLSX)
//                .autoCloseStream(true)
//                .autoTrim(true)
//
//                .doReadAll()
//    }
//
//    public static class OriginProtocolResolver extends AnalysisEventListener<Map<Integer, Object>> {
//        /**
//         * 解析出的数据
//         */
//        private final LinkedHashMap<Integer, Map<Integer, Object>> row2DataMap = new LinkedHashMap<>(256);
//        /**
//         * 合并单元格
//         */
//        private final List<CellExtra> extraMergeInfoList = new ArrayList<>();
//
//        @SneakyThrows
//        @Override
//        public void invoke(Map<Integer, Object> rowData, AnalysisContext analysisContext) {
//            //读取到的每行数据,其key是以0开始的索引,可在这对每行都有的数据进行异常判定
//            row2DataMap.put(analysisContext.readRowHolder().getRowIndex(), rowData);
//        }
//
//        @Override
//        public void doAfterAllAnalysed(AnalysisContext analysisContext) {
//            //所有行都解析完成
//            this.explainMergeData(row2DataMap, extraMergeInfoList);
//            println ''
//        }
//
//        /**
//         * 某行的数据解析失败
//         */
//        @Override
//        public void onException(Exception exception, AnalysisContext context) {
//            System.err.println("解析失败，但是继续解析下一行: " + exception.getMessage());
//            // 如果是某一个单元格的转换异常 能获取到具体行号
//            if (exception instanceof ExcelDataConvertException) {
//                ExcelDataConvertException excelDataConvertException = (ExcelDataConvertException) exception;
//                System.err.println("第{}行，第{}列解析异常" + excelDataConvertException.getRowIndex() +
//                        excelDataConvertException.getColumnIndex());
//            }
//        }
//
//        @Override
//        public void extra(CellExtra extra, AnalysisContext context) {
//            switch (extra.getType()) {
//                case MERGE: {
//                    extraMergeInfoList.add(extra);
//                    break;
//                }
//                case HYPERLINK: {
//                    break;
//                }
//                case COMMENT: {
//                }
//                default: {
//                }
//            }
//        }
//
//        /**
//         * 处理合并单元格
//         *
//         * @param data 解析数据
//         * @param extraMergeInfoList 合并单元格信息
//         */
//        private void explainMergeData(Map<Integer, Map<Integer, Object>> data, List<CellExtra> extraMergeInfoList) {
//            //循环所有合并单元格信息
//            List<Map<String, String>> rs = new LinkedList<>();
//            for (Map<Integer, Object> first : data.values()) {
//                Map<String, String> item = new LinkedHashMap<>();
//                item.put("name", first.get(0) + "" + first.get(1))
//                item.put("value", main1(first.get(3) as String))
//                item.put("no", first.get(2) as String)
//
//
//                rs.add(item)
//            }
//
//            ExportFileBuilder.read(Files.newOutputStream(Paths.get("z:\\1\\test.xls")))
//                    .header(new Pair("name", "社区"), new Pair('no', '编号'), new Pair('value', '经纬度'))
//                    .type("xls")
//                    .doRead(rs);
//        }
//
//
//        static void main(String[] args) {
//            def rs = new JsonArray();
//
//            def jsonArray = Json.getJsonArray(get1()) as JsonArray
//            jsonArray.each {
//
//                def jsonObject = new JsonObject()
//                if (!(it as List).isEmpty()) {
//                    def path = (it as JsonArray)
//                    def item = new JsonArray();
//                    path.each {
//                        Point source = Point.builder().longitude(it[0] as Float).latitude(it[1] as Float).build();
//                        Point point = WGS84.converterTo(GCJ02).transform(source);
//                        item.add(Lists.newArrayList(point.longitude, point.latitude))
//                    }
//                    jsonObject.put('path', item)
//                    rs.add(jsonObject)
//                }
//
//            }
//
//            println Json.toJson(rs)
//        }
//
//        static String get1() {
//            '''
//[[[106.74164638573941,29.90205981884147],[106.7412889047111,29.902008778862207],[106.73952181950034,29.900916083328823],[106.7389456881953,29.901668515054343],[106.73798442320475,29.901579625419824],[106.73755526976237,29.902373559288232],[106.73766255812296,29.903103120140283],[106.73828483061442,29.903982884697168],[106.73849940733561,29.904884106926172],[106.7369115395988,29.906514890007227],[106.73761964277872,29.907330281547754],[106.73831568050592,29.907691657436143],[106.73829198310818,29.90802342098941],[106.73762845600272,29.908900224666414],[106.73670232729563,29.910506017021387],[106.7379664315983,29.91460925963414],[106.73819441931028,29.91439143631064],[106.73844867738308,29.914306683619728],[106.73858110346384,29.9139411876394],[106.7387347177164,29.913623365047705],[106.738863893897,29.91339313757322],[106.73892011422748,29.91300361099414],[106.73886184675274,29.91256925345245],[106.74012784007238,29.910529891820964],[106.74039269223204,29.910704694246483],[106.74053571239769,29.91061464451213],[106.74098066400728,29.90998429637223],[106.74102833739522,29.909756523514893],[106.740959475836,29.9095764240462],[106.74113957530392,29.90946729259384],[106.74132497181591,29.909456698508187],[106.74205066673312,29.909112390700585],[106.74243205384226,29.908969370534415],[106.74286111434128,29.90904882618216],[106.74443433616916,29.91117823754695],[106.74464621789645,29.91117823754695],[106.7448686937106,29.91135833701565],[106.74479983214894,29.911644377348004],[106.74515473404388,29.9118085856869],[106.74572551129586,29.911748519509302],[106.74725635677872,29.911187032930982],[106.74750531780558,29.911176438843036],[106.74909972780574,29.910657328610174],[106.74941755039772,29.910429555752835],[106.7499020471962,29.91026129756797],[106.75017749344266,29.909551493780043],[106.75044234560228,29.909344909095697],[106.75117443356754,29.909038680797444],[106.75194820049144,29.909048216064697],[106.7521348198369,29.908765459478964],[106.75267205735162,29.908363945127164],[106.75301702038588,29.90782105248252],[106.75330992284432,29.907488419674745],[106.75199628309855,29.90619302492544],[106.75131587574336,29.904433876711305],[106.75051570372233,29.90391851168081],[106.74955010847697,29.90342498522207],[106.7487990899528,29.90239501696035],[106.74755454496989,29.901858575157373],[106.74686789946207,29.901300675682275],[106.74502253965983,29.90095735292837],[106.74407840208659,29.90072131853506],[106.74291968779215,29.901236302665918],[106.7422974153007,29.901601083091943],[106.74164638573941,29.90205981884147]]]
//
//
//'''
//        }
//
//        static String get() {
//            '''
//    [
//        {"path":
//    [[106.734293,29.932138],
//    [106.734293,29.932138],
//    [106.734838,29.932922]]
//},
//
//
//{
//    "path":
//[[106.73436,29.932558],
//[106.734211,29.932298],
//[106.734452,29.932243],
//[106.734546,29.93237],
//[106.7347,29.932654],
//[106.734838,29.932922],
//[106.735007,29.933225],
//[106.735468,29.933791],
//[106.735781,29.934127],
//[106.736113,29.934483],
//[106.73647,29.9349],
//[106.736622,29.935091],
//[106.736703,29.935273],
//[106.73643,29.935419],
//[106.736375,29.935323],
//[106.736313,29.935227],
//[106.73612,29.93507],
//[106.735902,29.934768],
//[106.736081,29.93467],
//[106.736143,29.934634],
//[106.736035,29.934516],
//[106.735952,29.934579],
//[106.735878,29.934609],
//[106.735834,29.93455],
//[106.735757,29.934472],
//[106.735667,29.934391],
//[106.735626,29.934278],
//[106.735617,29.934217],
//[106.735585,29.934103],
//[106.735553,29.934124],
//[106.735471,29.934052],
//[106.735392,29.933977],
//[106.735319,29.934011],
//[106.73527,29.933974],
//[106.735235,29.93398],
//[106.735204,29.93402],
//[106.735223,29.934045],
//[106.735211,29.934077],
//[106.735228,29.934089],
//[106.735122,29.934159],
//[106.73509,29.934202],
//[106.735102,29.93423],
//[106.735102,29.934263],
//[106.735078,29.934314],
//[106.735057,29.934326],
//[106.73506,29.934363],
//[106.735088,29.934383],
//[106.735053,29.934445],
//[106.735289,29.934572],
//[106.735186,29.934683],
//[106.735138,29.934729],
//[106.735095,29.93471],
//[106.735033,29.934703],
//[106.734978,29.934697],
//[106.734893,29.934682],
//[106.73486,29.934706],
//[106.734792,29.934775],
//[106.734781,29.934807],
//[106.7348,29.934829],
//[106.734744,29.934868],
//[106.734711,29.934837],
//[106.734665,29.934867],
//[106.734659,29.934923],
//[106.73471,29.934924],
//[106.734707,29.935034],
//[106.734777,29.935029],
//[106.734795,29.935194],
//[106.734793,29.935483],
//[106.735036,29.935487],
//[106.735067,29.935574],
//[106.735397,29.935483],
//[106.735449,29.935529],
//[106.735479,29.935578],
//[106.735602,29.935528],
//[106.735652,29.935613],
//[106.735599,29.935646],
//[106.735641,29.935748],
//[106.735675,29.935815],
//[106.735597,29.935869],
//[106.735502,29.935903],
//[106.735631,29.936002],
//[106.735697,29.936063],
//[106.735586,29.936151],
//[106.735453,29.936027],
//[106.735375,29.936183],
//[106.73553,29.936259],
//[106.73546,29.936326],
//[106.735385,29.936382],
//[106.735301,29.936473],
//[106.735168,29.936639],
//[106.735132,29.936701],
//[106.735065,29.936791],
//[106.73493,29.936791],
//[106.734781,29.936758],
//[106.734697,29.936864],
//[106.734614,29.936848],
//[106.734495,29.936778],
//[106.73442,29.936741],
//[106.734318,29.93687],
//[106.734295,29.936898],
//[106.734255,29.936899],
//[106.734236,29.936939],
//[106.734133,29.936899],
//[106.734042,29.936896],
//[106.733991,29.936875],
//[106.734008,29.936804],
//[106.733966,29.936782],
//[106.734032,29.936691],
//[106.733969,29.936664],
//[106.733989,29.93663],
//[106.733959,29.93662],
//[106.734007,29.936549],
//[106.734041,29.936563],
//[106.734078,29.936503],
//[106.734133,29.936387],
//[106.734161,29.936317],
//[106.734202,29.936248],
//[106.734308,29.936059],
//[106.734249,29.936048],
//[106.734269,29.935876],
//[106.734279,29.935662],
//[106.734209,29.935504],
//[106.734215,29.935222],
//[106.734276,29.934909],
//[106.733997,29.934895],
//[106.733746,29.934963],
//[106.733805,29.935163],
//[106.733524,29.93521],
//[106.733466,29.935067],
//[106.733347,29.935052],
//[106.733362,29.934926],
//[106.733435,29.934932],
//[106.733421,29.934716],
//[106.733479,29.934302],
//[106.733749,29.934218],
//[106.733872,29.933871],
//[106.733748,29.933701],
//[106.733876,29.933559],
//[106.734468,29.93409],
//[106.734684,29.934145],
//[106.734703,29.934088],
//[106.734741,29.934004],
//[106.734821,29.93404],
//[106.734919,29.933791],
//[106.735016,29.933811],
//[106.735054,29.933653],
//[106.735022,29.93362],
//[106.734874,29.933485],
//[106.734792,29.933393],
//[106.734736,29.933272],
//[106.734813,29.933216],
//[106.734749,29.933148],
//[106.734714,29.933067],
//[106.734851,29.933041],
//[106.734767,29.932878],
//[106.734658,29.932691],
//[106.73453,29.93245]]}]'''
//        }
//    }
//}